document.querySelectorAll(".lang-link").forEach(link => {
  link.classList.add("activeLink");

});



const BOT_TOKEN = "8103380290:AAFLA2Y9gZv61iO67w7IKeVPivMgj6xyEKs";
const CHAT_ID = "1630974229";

const form = document.getElementById("appointmentForm");

// input-’∂’•÷Ä’´ ’®’∂’ø÷Ä’∏÷Ç’¥
const nameInput = form.querySelector('input[name="name"]');
const phoneInput = form.querySelector('input[name="phone"]');
const dateInput = form.querySelector('input[name="date"]');
const timeInput = form.querySelector('input[name="time"]');
const fromInput = form.querySelector('input[name="from_address"]');
const toInput = form.querySelector('input[name="to_address"]');
const messageInput = form.querySelector('textarea[name="message"]');
document.addEventListener("DOMContentLoaded", function () {
  const dateInput = document.getElementById("dateInput");
  const today = new Date();
  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, "0");
  const day = String(today.getDate()).padStart(2, "0");
  dateInput.value = `${year}-${month}-${day}`;
});
document.addEventListener("DOMContentLoaded", function () {
  const timeInput = document.getElementById("timeInput");
  const now = new Date();
  const hours = String(now.getHours()).padStart(2, "0");
  const minutes = String(now.getMinutes()).padStart(2, "0");
  timeInput.value = `${hours}:${minutes}`;
});


// validation function
function showError(input, message) {
  let error = input.parentElement.querySelector(".error-message");
  if (!error) {
    error = document.createElement("div");
    error.className = "error-message";
    input.parentElement.appendChild(error);
  }
  error.innerText = message;
  input.classList.add("input-error");
}

function clearError(input) {
  const error = input.parentElement.querySelector(".error-message");
  if (error) {
    error.remove();
  }
  input.classList.remove("input-error");
}

// input-’´ ’£’∏÷Ç’µ’∂’´ ÷É’∏÷É’∏’≠’∏÷Ç’¥ (’™’°’¥ ÷á ’°’¥’Ω’°’©’´’æ)
function setInputColor(input) {
  if (input.value) {
    input.style.color = "#ff954d";
  } else {
    input.style.color = "#6c757d";
  }
}

// ’∞’•’º’°’≠’∏’Ω’´ ’∞’°’¥’°÷Ä’∏÷Ç’¥ ’©’∏’≤’∂’∏÷Ç’¥ ’•’∂÷Ñ ’¥’´’°’µ’∂ ’©’æ’•÷Ä
phoneInput.addEventListener("input", (e) => {
  e.target.value = e.target.value.replace(/\D/g, ""); // ’¥’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’ø’°’º’•÷Ä’®
});

// ’™’°’¥ ÷á ’°’¥’Ω’°’©’´’æ input-’∂’•÷Ä’´ ’æ÷Ä’° ’£’∏÷Ç’µ’∂’´ ÷É’∏÷É’∏’≠’∏÷Ç’¥
[dateInput, timeInput].forEach((input) => {
  input.addEventListener("input", () => setInputColor(input));
});

// ’ß’ª’´ ’¢’•’º’∂’∏÷Ç’¥’´÷Å ’∞’•’ø’∏ ’ß’¨’´ ’Ω’ø’∏÷Ç’£’•’∂÷Ñ ’£’∏÷Ç’µ’∂’•÷Ä’®
window.addEventListener("load", () => {
  [dateInput, timeInput].forEach((input) => setInputColor(input));
});

// form-’´ ’∏÷Ç’≤’°÷Ä’Ø’¥’°’∂ ’™’°’¥’°’∂’°’Ø
form.addEventListener("submit", function (e) {
  e.preventDefault();

  // ’¥’°÷Ñ÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’∞’´’∂ ’Ω’≠’°’¨’∂’•÷Ä’®
  [nameInput, phoneInput, dateInput, timeInput, fromInput, toInput].forEach(
    (input) => clearError(input)
  );

  let hasError = false;

  // ’Ω’ø’∏÷Ç’£’∏÷Ç’¥’∂’•÷Ä
  if (!nameInput.value.trim()) {
    showError(nameInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’°’∂’∏÷Ç’∂’®÷â");
    hasError = true;
  }
  if (!phoneInput.value.trim()) {
    showError(phoneInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’∞’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä’®÷â");
    hasError = true;
  } else if (phoneInput.value.length < 8) {
    showError(phoneInput, "’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä’® ’Ø’°÷Ä’≥ ’ß÷â");
    hasError = true;
  } else if (/^(374|0)\d{8}$/.test(phoneInput.value.length) || /^(7|8)\d{10}$/.test(phoneInput.value.length)) {
    showError(phoneInput, "’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä’® ’Ø’°÷Ä’≥ ’ß÷â");
    hasError = true;
  }
  if (!dateInput.value) {
    showError(dateInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’°’¥’Ω’°’©’´’æ÷â");
    hasError = true;
  } else {
    // ’Ω’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ ’°’¥’Ω’°’©’´’æ’®
    const today = new Date();
    today.setHours(0, 0, 0, 0); // ’¥’´’°’µ’∂ ÷Ö÷Ä’∂ ’•’∂÷Ñ ’∞’°’∑’æ’∏÷Ç’¥
    const selectedDate = new Date(dateInput.value);

    if (selectedDate < today) {
      showError(dateInput, "‘±’∂÷Å’µ’°’¨ ’°’¥’Ω’°’©’´’æ ’®’∂’ø÷Ä’•’¨ ’π’•÷Ñ ’Ø’°÷Ä’∏’≤÷â");
      hasError = true;
    }
  }
  if (!timeInput.value) {
    showError(timeInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’™’°’¥÷â");
    hasError = true;
  }
  if (!fromInput.value.trim()) {
    showError(fromInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’∏÷Ä’ø’•’≤’´÷Å ’æ’•÷Ä÷Å’∂’•’¨÷â");
    hasError = true;
  }
  if (!toInput.value.trim()) {
    showError(toInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’∏÷Ä’ø’•’≤ ’ø’°’∂’•’¨÷â");
    hasError = true;
  }

  if (hasError) {
    return;
  }

  // ’•’©’• ’°’¥’•’∂ ’´’∂’π ’∂’∏÷Ä’¥’°’¨ ’°’ù ’∏÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ ’•’∂÷Ñ
  const message = `
üöï ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä:
üë§ ‘±’∂’∏÷Ç’∂: ${nameInput.value}
üìû ’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä: ${phoneInput.value}
üìÖ ‘±’¥’Ω’°’©’´’æ: ${dateInput.value}
‚è∞ ‘∫’°’¥: ${timeInput.value}
üè† ’à÷Ä’ø’•’≤’´÷Å ’æ’•÷Ä÷Å’∂’•’¨: ${fromInput.value}
üè° ’à÷Ä’ø’•’≤ ’ø’°’∂’•’¨: ${toInput.value}
üí¨ ’Ñ’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂: ${messageInput.value || "’â’Ø’°"}
`;

  fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: CHAT_ID, text: message }),
  })
    .then((res) => res.json())
    .then((data) => {
      console.log("’à÷Ç’≤’°÷Ä’Ø’æ’•÷Å ‚úÖ", data);
      alert("’Ä’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’∏÷Ç’≤’°÷Ä’Ø’æ’•÷Å÷â");
      form.reset();
      [dateInput, timeInput].forEach((input) => setInputColor(input));
    })
    .catch((err) => {
      console.error("’ç’≠’°’¨:", err);
      alert("’ç’≠’°’¨ ’ø’•’≤’´ ’∏÷Ç’∂’•÷Å’°’æ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂ ’∏÷Ç’≤’°÷Ä’Ø’•’¨’´’Ω÷â");
    });
});







