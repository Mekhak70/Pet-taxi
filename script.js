// ‘±’Ø’ø’´’æ’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ activeLink ’§’°’Ω’® ’¢’∏’¨’∏÷Ä .lang-link ’ß’¨’•’¥’•’∂’ø’∂’•÷Ä’´ ’æ÷Ä’°
document.querySelectorAll(".lang-link").forEach(link => {
  link.classList.add("activeLink");
});

const BOT_TOKEN = "8103380290:AAFLA2Y9gZv61iO67w7IKeVPivMgj6xyEKs";
const CHAT_ID = "1630974229";

const form = document.getElementById("appointmentForm");

// ’Ü’•÷Ä’°’º’°’Ø’°’∂ input-’∂’•÷Ä’´ ’®’∂’ø÷Ä’∏÷Ç’¥
const nameInput = form.querySelector('input[name="name"]');
const phoneInput = form.querySelector('input[name="phone"]');
const dateInput = form.querySelector('input[name="date"]');
const timeInput = form.querySelector('input[name="time"]');
const fromInput = form.querySelector('input[name="from_address"]');
const toInput = form.querySelector('input[name="to_address"]');
const messageInput = form.querySelector('textarea[name="message"]');

// ’ç’•’ø’°÷É’∏÷Ç’¥ ’•’∂÷Ñ ’∂’°’≠’∂’°’Ø’°’∂ ’°’¥’Ω’°’©’´’æ’∂ ’∏÷Ç ’™’°’¥’® ’ß’ª’´ ’¢’•’º’∂’∏÷Ç’¥’´÷Å
document.addEventListener("DOMContentLoaded", function () {
  const today = new Date();
  const year = today.getFullYear();
  const month = String(today.getMonth() + 1).padStart(2, "0");
  const day = String(today.getDate()).padStart(2, "0");
  dateInput.value = `${year}-${month}-${day}`;

  const hours = String(today.getHours()).padStart(2, "0");
  const minutes = String(today.getMinutes()).padStart(2, "0");
  timeInput.value = `${hours}:${minutes}`;
});

// ’é’•÷Ä’°’∞’Ω’Ø’∏’≤ ’£’∏÷Ä’Æ’°’º’∏÷Ç’µ’© ’Ω’≠’°’¨’∂’•÷Ä’´ ’∞’°’¥’°÷Ä
function showError(input, message) {
  let error = input.parentElement.querySelector(".error-message");
  if (!error) {
    error = document.createElement("div");
    error.className = "error-message";
    input.parentElement.appendChild(error);
  }
  error.innerText = message;
  input.classList.add("input-error");
}

// ’ç’≠’°’¨’´ ’∞’•’º’°÷Å’∏÷Ç’¥
function clearError(input) {
  const error = input.parentElement.querySelector(".error-message");
  if (error) {
    error.remove();
  }
  input.classList.remove("input-error");
}

// ‘≥’∏÷Ç’µ’∂’´ ÷É’∏÷É’∏’≠’∏÷Ç’¥ ’®’Ω’ø ’°÷Ä’™’•÷Ñ’´
function setInputColor(input) {
  if (input.value) {
    input.style.color = "#ff954d";
  } else {
    input.style.color = "#6c757d";
  }
}

// ’Ä’•’º’°’≠’∏’Ω’´ ’∞’°’¥’°÷Ä’´÷Å ’∞’•’º’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ ’∏’π ’©’æ’°’µ’´’∂ ’Ω’´’¥’æ’∏’¨’∂’•÷Ä’®
phoneInput.addEventListener("input", (e) => {
  e.target.value = e.target.value.replace(/\D/g, "");
});

// ‘∫’°’¥ ÷á ’°’¥’Ω’°’©’æ’´ ’§’°’∑’ø’•÷Ä’∏÷Ç’¥ ’£’∏÷Ç’µ’∂’´ ÷É’∏÷É’∏’≠’∏÷Ç’¥
[dateInput, timeInput].forEach((input) => {
  input.addEventListener("input", () => setInputColor(input));
});

// ‘∑’ª’´ ’¢’•’º’∂’æ’•’¨’∏÷Ç÷Å ’∞’•’ø’∏ ’£’∏÷Ç’µ’∂’•÷Ä’´ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
window.addEventListener("load", () => {
  [dateInput, timeInput].forEach((input) => setInputColor(input));
});

// Form submit event
form.addEventListener("submit", function (e) {
  e.preventDefault();

  // ’Ä’´’∂ ’Ω’≠’°’¨’∂’•÷Ä’´ ’∞’•’º’°÷Å’∏÷Ç’¥
  [nameInput, phoneInput, dateInput, timeInput, fromInput, toInput].forEach(
    (input) => clearError(input)
  );

  let hasError = false;

  // ’é’°’¨’´’§’°÷Å’´’°’∂’•÷Ä
  if (!nameInput.value.trim()) {
    showError(nameInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’°’∂’∏÷Ç’∂’®÷â");
    hasError = true;
  }

  // ’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä’´ regex (’∞’°÷Ä÷Å’°’Ø’°’∂ ’ß, ’©’°÷Ä’¥’°÷Å÷Ä’∏÷Ç ’®’Ω’ø ÷Å’°’∂’Ø’∏÷Ç’©’µ’°’∂)
  const phoneRegex = /^(?:\+?374|0)([1-9][0-9])\d{6}$|^(?:\+?7|8)?9\d{9}$/;
  if (!phoneRegex.test(phoneInput.value)) {
    showError(phoneInput, "’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä’® ’Ω’≠’°’¨ ’ß÷â");
    hasError = true;
  }

  if (!dateInput.value) {
    showError(dateInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’°’¥’Ω’°’©’´’æ÷â");
    hasError = true;
  } else {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const selectedDate = new Date(dateInput.value);
    if (selectedDate < today) {
      showError(dateInput, "‘±’∂÷Å’µ’°’¨ ’°’¥’Ω’°’©’´’æ ’®’∂’ø÷Ä’•’¨ ’π’•÷Ñ ’Ø’°÷Ä’∏’≤÷â");
      hasError = true;
    }
  }

  if (!timeInput.value) {
    showError(timeInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’ø÷Ä’•’¨ ’™’°’¥÷â");
    hasError = true;
  }

  if (!fromInput.value.trim()) {
    showError(fromInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’∏÷Ä’ø’•’≤’´÷Å ’æ’•÷Ä÷Å’∂’•’¨÷â");
    hasError = true;
  }

  if (!toInput.value.trim()) {
    showError(toInput, "‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’¨÷Ä’°÷Å’∂’•’¨ ’∏÷Ä’ø’•’≤ ’ø’°’∂’•’¨÷â");
    hasError = true;
  }

  if (hasError) return;

  // ’è’•÷Ñ’Ω’ø’®, ’∏÷Ä’® ’∏÷Ç’≤’°÷Ä’Ø’•’¨’∏÷Ç ’•’∂÷Ñ Telegram-’´’∂
  const message = `
üöï ’Ü’∏÷Ä ’∫’°’ø’æ’•÷Ä:
üë§ ‘±’∂’∏÷Ç’∂: ${nameInput.value}
üìû ’Ä’•’º’°’≠’∏’Ω’°’∞’°’¥’°÷Ä: ${phoneInput.value}
üìÖ ‘±’¥’Ω’°’©’´’æ: ${dateInput.value}
‚è∞ ‘∫’°’¥: ${timeInput.value}
üè† ’à÷Ä’ø’•’≤’´÷Å ’æ’•÷Ä÷Å’∂’•’¨: ${fromInput.value}
üè° ’à÷Ä’ø’•’≤ ’ø’°’∂’•’¨: ${toInput.value}
üí¨ ’Ñ’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂: ${messageInput.value || "’â’Ø’°"}
`;

  // ’à÷Ç’≤’°÷Ä’Ø’∏÷Ç’¥ Telegram API-’´ ’¥’´’ª’∏÷Å’∏’æ
  fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: CHAT_ID, text: message }),
  })
    .then((res) => res.json())
    .then((data) => {
      console.log("’à÷Ç’≤’°÷Ä’Ø’æ’•÷Å ‚úÖ", data);

      const successSound = new Audio("audio/success-340660.mp3");
      successSound.volume = 0.7;
      successSound.play().then(() => {
        alert("’Å’•÷Ä ’ø’æ’µ’°’¨’∂’•÷Ä’® ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’∏÷Ç’≤’°÷Ä’Ø’æ’•’¨ ’•’∂÷â ’Ñ’•’∂÷Ñ ’∑’∏÷Ç’ø’∏’æ ’Ø’°’∫ ’Ø’∞’°’Ω’ø’°’ø’•’∂÷Ñ ’Å’•’¶ ’∞’•’ø÷â");
      });

      form.reset();
      [dateInput, timeInput].forEach((input) => setInputColor(input));
    })
    .catch((err) => {
      console.error("’ç’≠’°’¨:", err);
      alert("’Ä’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂ ’∏÷Ç’≤’°÷Ä’Ø’•’¨’∏÷Ç ’®’∂’©’°÷Å÷Ñ’∏÷Ç’¥ ’Ω’≠’°’¨ ’ø’•’≤’´ ’∏÷Ç’∂’•÷Å’°’æ÷â ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ÷É’∏÷Ä’±’•’¨ ’Ø÷Ä’Ø’´’∂:");
    });
});

// Service Worker ’£÷Ä’°’∂÷Å’∏÷Ç’¥
if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/service-worker.js')
      .then(registration => {
        console.log('Service Worker registered with scope:', registration.scope);
      })
      .catch(error => {
        console.log('Service Worker registration failed:', error);
      });
  });
}
